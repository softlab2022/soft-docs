/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!****************************!*\
  !*** ./src/js/frontend.js ***!
  \****************************/
;

(function ($) {
  var app = {
    init: function init() {
      //Handle ajax search delay 500ms
      var timer;
      $('.softdocs-search-field').on('keyup', function () {
        clearTimeout(timer);
        timer = setTimeout(function () {
          app.handleSearch();
        }, 700);
      });
      $('.softdocs-search-form').on('submit', app.handleSearch);
      $('.softdocs-search-close').on('click', app.handleSearchClose);
      $('.softdocs-category-select').on('change', app.handleSearch);
    },
    handleSearch: function handleSearch(e) {
      var search = $('.softdocs-search-field').val();

      if (e) {
        e.preventDefault();
      } else {
        if (search.length < 3) {
          return;
        }
      }

      var category = $('.softdocs-category-select').val();
      wp.ajax.send('softdocs_search', {
        data: {
          search: search,
          category: category
        },
        success: function success(response) {
          $('.softdocs-search-results-wrap').addClass('active');
          $('.softdocs-search-results').html(response);
        },
        beforeSend: function beforeSend() {
          $('.softdocs-search-loader').addClass('active');
        },
        complete: function complete() {
          $('.softdocs-search-loader').removeClass('active');
          $('.softdocs-search-close').addClass('active');
        }
      });
    },
    handleSearchClose: function handleSearchClose() {
      $('.softdocs-search-results-wrap').removeClass('active');
      $('.softdocs-search-results').html('');
      $('.softdocs-search-field').val('');
      $('.softdocs-search-close').removeClass('active');
    }
  };
  $(document).ready(app.init);
})(jQuery);
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbnRlbmQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7QUFBQyxDQUFDLFVBQVVBLENBQVYsRUFBYTtFQUNYLElBQU1DLEdBQUcsR0FBRztJQUNSQyxJQUFJLEVBQUUsZ0JBQVk7TUFDZDtNQUNBLElBQUlDLEtBQUo7TUFDQUgsQ0FBQyxDQUFDLHdCQUFELENBQUQsQ0FBNEJJLEVBQTVCLENBQStCLE9BQS9CLEVBQXdDLFlBQVk7UUFDaERDLFlBQVksQ0FBQ0YsS0FBRCxDQUFaO1FBRUFBLEtBQUssR0FBR0csVUFBVSxDQUFDLFlBQVk7VUFDM0JMLEdBQUcsQ0FBQ00sWUFBSjtRQUNILENBRmlCLEVBRWYsR0FGZSxDQUFsQjtNQUdILENBTkQ7TUFRQVAsQ0FBQyxDQUFDLHVCQUFELENBQUQsQ0FBMkJJLEVBQTNCLENBQThCLFFBQTlCLEVBQXdDSCxHQUFHLENBQUNNLFlBQTVDO01BQ0FQLENBQUMsQ0FBQyx3QkFBRCxDQUFELENBQTRCSSxFQUE1QixDQUErQixPQUEvQixFQUF3Q0gsR0FBRyxDQUFDTyxpQkFBNUM7TUFDQVIsQ0FBQyxDQUFDLDJCQUFELENBQUQsQ0FBK0JJLEVBQS9CLENBQWtDLFFBQWxDLEVBQTRDSCxHQUFHLENBQUNNLFlBQWhEO0lBQ0gsQ0FmTztJQWlCUkEsWUFBWSxFQUFFLHNCQUFVRSxDQUFWLEVBQWE7TUFDdkIsSUFBSUMsTUFBTSxHQUFHVixDQUFDLENBQUMsd0JBQUQsQ0FBRCxDQUE0QlcsR0FBNUIsRUFBYjs7TUFFQSxJQUFJRixDQUFKLEVBQU87UUFDSEEsQ0FBQyxDQUFDRyxjQUFGO01BQ0gsQ0FGRCxNQUVPO1FBQ0gsSUFBSUYsTUFBTSxDQUFDRyxNQUFQLEdBQWdCLENBQXBCLEVBQXVCO1VBQ25CO1FBQ0g7TUFDSjs7TUFFRCxJQUFNQyxRQUFRLEdBQUdkLENBQUMsQ0FBQywyQkFBRCxDQUFELENBQStCVyxHQUEvQixFQUFqQjtNQUVBSSxFQUFFLENBQUNDLElBQUgsQ0FBUUMsSUFBUixDQUFhLGlCQUFiLEVBQWdDO1FBQzVCQyxJQUFJLEVBQUU7VUFDRlIsTUFBTSxFQUFOQSxNQURFO1VBRUZJLFFBQVEsRUFBUkE7UUFGRSxDQURzQjtRQUs1QkssT0FBTyxFQUFFLGlCQUFVQyxRQUFWLEVBQW9CO1VBQ3pCcEIsQ0FBQyxDQUFDLCtCQUFELENBQUQsQ0FBbUNxQixRQUFuQyxDQUE0QyxRQUE1QztVQUNBckIsQ0FBQyxDQUFDLDBCQUFELENBQUQsQ0FBOEJzQixJQUE5QixDQUFtQ0YsUUFBbkM7UUFDSCxDQVIyQjtRQVM1QkcsVUFBVSxFQUFFLHNCQUFZO1VBQ3BCdkIsQ0FBQyxDQUFDLHlCQUFELENBQUQsQ0FBNkJxQixRQUE3QixDQUFzQyxRQUF0QztRQUNILENBWDJCO1FBWTVCRyxRQUFRLEVBQUUsb0JBQVk7VUFDbEJ4QixDQUFDLENBQUMseUJBQUQsQ0FBRCxDQUE2QnlCLFdBQTdCLENBQXlDLFFBQXpDO1VBQ0F6QixDQUFDLENBQUMsd0JBQUQsQ0FBRCxDQUE0QnFCLFFBQTVCLENBQXFDLFFBQXJDO1FBQ0g7TUFmMkIsQ0FBaEM7SUFpQkgsQ0EvQ087SUFpRFJiLGlCQUFpQixFQUFFLDZCQUFZO01BQzNCUixDQUFDLENBQUMsK0JBQUQsQ0FBRCxDQUFtQ3lCLFdBQW5DLENBQStDLFFBQS9DO01BQ0F6QixDQUFDLENBQUMsMEJBQUQsQ0FBRCxDQUE4QnNCLElBQTlCLENBQW1DLEVBQW5DO01BQ0F0QixDQUFDLENBQUMsd0JBQUQsQ0FBRCxDQUE0QlcsR0FBNUIsQ0FBZ0MsRUFBaEM7TUFDQVgsQ0FBQyxDQUFDLHdCQUFELENBQUQsQ0FBNEJ5QixXQUE1QixDQUF3QyxRQUF4QztJQUNIO0VBdERPLENBQVo7RUF5REF6QixDQUFDLENBQUMwQixRQUFELENBQUQsQ0FBWUMsS0FBWixDQUFrQjFCLEdBQUcsQ0FBQ0MsSUFBdEI7QUFDSCxDQTNEQSxFQTJERTBCLE1BM0RGLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb2Z0LWRvY3MvLi9zcmMvanMvZnJvbnRlbmQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiOyhmdW5jdGlvbiAoJCkge1xuICAgIGNvbnN0IGFwcCA9IHtcbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgLy9IYW5kbGUgYWpheCBzZWFyY2ggZGVsYXkgNTAwbXNcbiAgICAgICAgICAgIGxldCB0aW1lcjtcbiAgICAgICAgICAgICQoJy5zb2Z0ZG9jcy1zZWFyY2gtZmllbGQnKS5vbigna2V5dXAnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcblxuICAgICAgICAgICAgICAgIHRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGFwcC5oYW5kbGVTZWFyY2goKTtcbiAgICAgICAgICAgICAgICB9LCA3MDApO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICQoJy5zb2Z0ZG9jcy1zZWFyY2gtZm9ybScpLm9uKCdzdWJtaXQnLCBhcHAuaGFuZGxlU2VhcmNoKTtcbiAgICAgICAgICAgICQoJy5zb2Z0ZG9jcy1zZWFyY2gtY2xvc2UnKS5vbignY2xpY2snLCBhcHAuaGFuZGxlU2VhcmNoQ2xvc2UpO1xuICAgICAgICAgICAgJCgnLnNvZnRkb2NzLWNhdGVnb3J5LXNlbGVjdCcpLm9uKCdjaGFuZ2UnLCBhcHAuaGFuZGxlU2VhcmNoKTtcbiAgICAgICAgfSxcblxuICAgICAgICBoYW5kbGVTZWFyY2g6IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBsZXQgc2VhcmNoID0gJCgnLnNvZnRkb2NzLXNlYXJjaC1maWVsZCcpLnZhbCgpO1xuXG4gICAgICAgICAgICBpZiAoZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlYXJjaC5sZW5ndGggPCAzKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGNhdGVnb3J5ID0gJCgnLnNvZnRkb2NzLWNhdGVnb3J5LXNlbGVjdCcpLnZhbCgpO1xuXG4gICAgICAgICAgICB3cC5hamF4LnNlbmQoJ3NvZnRkb2NzX3NlYXJjaCcsIHtcbiAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgIHNlYXJjaCxcbiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgJCgnLnNvZnRkb2NzLXNlYXJjaC1yZXN1bHRzLXdyYXAnKS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAgICAgICAgICQoJy5zb2Z0ZG9jcy1zZWFyY2gtcmVzdWx0cycpLmh0bWwocmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYmVmb3JlU2VuZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAkKCcuc29mdGRvY3Mtc2VhcmNoLWxvYWRlcicpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICQoJy5zb2Z0ZG9jcy1zZWFyY2gtbG9hZGVyJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgICAgICAgICAkKCcuc29mdGRvY3Mtc2VhcmNoLWNsb3NlJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIGhhbmRsZVNlYXJjaENsb3NlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKCcuc29mdGRvY3Mtc2VhcmNoLXJlc3VsdHMtd3JhcCcpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICQoJy5zb2Z0ZG9jcy1zZWFyY2gtcmVzdWx0cycpLmh0bWwoJycpO1xuICAgICAgICAgICAgJCgnLnNvZnRkb2NzLXNlYXJjaC1maWVsZCcpLnZhbCgnJyk7XG4gICAgICAgICAgICAkKCcuc29mdGRvY3Mtc2VhcmNoLWNsb3NlJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJChkb2N1bWVudCkucmVhZHkoYXBwLmluaXQpO1xufSkoalF1ZXJ5KTsiXSwibmFtZXMiOlsiJCIsImFwcCIsImluaXQiLCJ0aW1lciIsIm9uIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImhhbmRsZVNlYXJjaCIsImhhbmRsZVNlYXJjaENsb3NlIiwiZSIsInNlYXJjaCIsInZhbCIsInByZXZlbnREZWZhdWx0IiwibGVuZ3RoIiwiY2F0ZWdvcnkiLCJ3cCIsImFqYXgiLCJzZW5kIiwiZGF0YSIsInN1Y2Nlc3MiLCJyZXNwb25zZSIsImFkZENsYXNzIiwiaHRtbCIsImJlZm9yZVNlbmQiLCJjb21wbGV0ZSIsInJlbW92ZUNsYXNzIiwiZG9jdW1lbnQiLCJyZWFkeSIsImpRdWVyeSJdLCJzb3VyY2VSb290IjoiIn0=